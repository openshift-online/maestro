name: Maestro Pipeline

on:
  workflow_dispatch: {}
  pull_request_target:
    branches:
      - main
    types: [opened, synchronize, reopened]

jobs:
  svc-cluster-access:
    runs-on: ubuntu-latest
    permissions:
      id-token: 'write'
      contents: 'read'

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # Login to Azure using OIDC (no secret needed if federated identity is set up)
      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          # if not using federated identity:
          # client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}

      # Get AKS credentials
      - name: Get AKS credentials
        run: |
          az aks get-credentials \
            --resource-group ${{ secrets.SVC_RESOURCE_GROUP }} \
            --name ${{ secrets.SVC_CLUSTER_NAME }} \
            --overwrite-existing

      # Install kubelogin (needed for AAD-enabled clusters)
      - name: Install kubelogin
        run: |
          az aks install-cli
          kubelogin --version

      # Convert kubeconfig for non-interactive login (GitHub runner)
      - name: Convert kubeconfig for kubelogin
        run: |
          kubelogin convert-kubeconfig -l azurecli

      # Verify kubectl works
      - name: Check cluster access
        run: kubectl get nodes

  mgmt-cluster-access:
    runs-on: ubuntu-latest
    permissions:
      id-token: 'write'
      contents: 'read'

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # Login to Azure using OIDC (no secret needed if federated identity is set up)
      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          # if not using federated identity:
          # client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}

      # Get AKS credentials
      - name: Get AKS credentials
        run: |
          az aks get-credentials \
            --resource-group ${{ secrets.MGMT_RESOURCE_GROUP }} \
            --name ${{ secrets.MGMT_CLUSTER_NAME }} \
            --overwrite-existing

      # Install kubelogin (needed for AAD-enabled clusters)
      - name: Install kubelogin
        run: |
          az aks install-cli
          kubelogin --version

      # Convert kubeconfig for non-interactive login (GitHub runner)
      - name: Convert kubeconfig for kubelogin
        run: |
          kubelogin convert-kubeconfig -l azurecli

      # Verify kubectl works
      - name: Check cluster access
        run: kubectl get nodes
